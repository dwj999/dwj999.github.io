<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jiessie&#39;s&#39; Blog</title>
  
  <subtitle>没伞的孩子必须努力奔跑</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://dwj999.github.io/"/>
  <updated>2018-07-29T09:39:57.000Z</updated>
  <id>https://dwj999.github.io/</id>
  
  <author>
    <name>Jiessie</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="https://dwj999.github.io/hello-world.html"/>
    <id>https://dwj999.github.io/hello-world.html</id>
    <published>2018-07-29T09:53:26.559Z</published>
    <updated>2018-07-29T09:39:57.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>MySQL启动配置文件搜索顺序解析</title>
    <link href="https://dwj999.github.io/MySQL%E5%90%AF%E5%8A%A8%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E6%90%9C%E7%B4%A2%E9%A1%BA%E5%BA%8F%E8%A7%A3%E6%9E%90.html"/>
    <id>https://dwj999.github.io/MySQL启动配置文件搜索顺序解析.html</id>
    <published>2018-07-20T07:12:47.000Z</published>
    <updated>2020-05-20T02:40:30.802Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-引言"><a href="#1-引言" class="headerlink" title="1    引言"></a>1    引言</h2><p>MySQL数据库支持从配置文件中读取启动选项，不用每次启动时在命令行输入，方便管理。很多选项都是以纯文本的形式存在，可以用任何的编辑器打开编辑。.mylogin.cnf文件除外，此文件包含了登录路径的选项，使用mysql_config_editor程序去创建的加密文件。</p><h2 id="2-搜索顺序"><a href="#2-搜索顺序" class="headerlink" title="2    搜索顺序"></a>2    搜索顺序</h2><p>MySQL默认情况下是按照一定的顺序去搜索具体路径的配置文件，并且在windows和linux的操作顺序不一样。<br>搜索顺序，按照下面表格中文件名从上往下，如果存在相同的选项，最后一个出现的选项有最高的优先级。参考官网的解释：<font color="FF0000"><b>”Options are processed in order, so if an option is specified multiple times, the last occurrence takes precedence.”</b></font></p><h3 id="2-1-Windows"><a href="#2-1-Windows" class="headerlink" title="2.1    Windows"></a>2.1    Windows</h3><p>在windows上，MySQL按照指定的顺序从下表中显示的文件中读取启动选项</p><table><thead><tr><th>文件名</th><th>描述</th></tr></thead><tbody><tr><td>%WINDIR%\my.ini, %WINDIR%\my.cnf</td><td>全局</td></tr><tr><td>C:\my.ini, C:\my.cnf</td><td>全局</td></tr><tr><td>BASEDIR\my.ini, BASEDIR\my.cnf</td><td>全局</td></tr><tr><td>defaults-extra-file</td><td>如果存在—default-extra-file</td></tr><tr><td>%APPDATA%\MySQL.mylogin.cnf</td><td>Login选项，仅适用于client</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">其中，</span><br><span class="line">WINDIR表示Windows目录的位置，例如C:\Windows</span><br><span class="line">APPDIR表示Windows应用程序数据目录</span><br><span class="line">BASEDIR表示MySQL的安装目录</span><br></pre></td></tr></table></figure><h3 id="2-2-Linux-or-Unix"><a href="#2-2-Linux-or-Unix" class="headerlink" title="2.2    Linux or Unix"></a>2.2    Linux or Unix</h3><p>在Linux或Unix等类Unix系统上，MySQL按照指定的顺序从下表中显示的文件中读取启动选项</p><table><thead><tr><th>文件名</th><th>描述</th></tr></thead><tbody><tr><td>/etc/my.cnf</td><td>全局</td></tr><tr><td>/etc/mysql/my.cnf</td><td>全局</td></tr><tr><td>SYSCONFDIR/my.cnf</td><td>全局</td></tr><tr><td>$MYSQL_HOME/my.cnf</td><td>仅适用于server</td></tr><tr><td>defaults-extra-file</td><td>如果存在—default-extra-file</td></tr><tr><td>~/.my.cnf</td><td>用户的选项</td></tr><tr><td>~/.mylogin.cnf</td><td>Login选项，仅适用于client</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">其中，</span><br><span class="line">~表示当前用户的主目录</span><br><span class="line">SYSCONFIGDIR表示在构建MySQL时使用SYSCONFIGDIR选项CMake的指定目录</span><br><span class="line">MySQL_HOME是一个环境变量，如果没有设置，并使用mysqld_safe启用MySQL，这时MySQL的安装目录就是其BASEDIR</span><br></pre></td></tr></table></figure><h2 id="3-实验"><a href="#3-实验" class="headerlink" title="3    实验"></a>3    实验</h2><p>生产环境一般多使用linux系统，在单实例和多实例启动时，my.cnf加载的顺序也存在不一样的情况，这里分别进行测试，对结果进行说明</p><h3 id="3-1-单实例"><a href="#3-1-单实例" class="headerlink" title="3.1    单实例"></a>3.1    单实例</h3><p>在不考虑SYSCONDIR，同时BASEDIR为/usr/local/mysql的情况下，从上面的搜索顺序来看，MySQL会依次加载以下的文件：</p><ul><li>/etc/my.cnf</li><li>/etc/mysql/my.cnf</li><li>/usr/local/mysql/my.cnf</li><li>~/.my.cnf<br>也就是说MySQL会找/etc/my.cnf这个文件，如果此文件不存在，继续找/etc/mysql/my.cnf这个文件，依此类推，最后是读取–defaults-file加载的文件，如果最后的文件也不存在，通过mysqld的帮助可以看出来:</li></ul><p><img src="https://note.youdao.com/yws/public/resource/7a2a9244a0e6fb6138204da4675bbe06/xmlnote/4790EAB515654EF6BDE79AC7E24DC180/56032" alt="image"></p><h4 id="3-1-1-etc-my-cnf"><a href="#3-1-1-etc-my-cnf" class="headerlink" title="3.1.1    /etc/my.cnf"></a>3.1.1    /etc/my.cnf</h4><p>当没有指定–defaults-file时，而且/etc/my.cnf，/etc/mysql/my.cnf，/usr/local/mysql/my.cnf，~/.my.cnf中只存在/etc/my.cnf时，很明显MySQL是加载的<font color="FF0000"><b>/etc/my.cnf</b></font></p><p><img src="https://note.youdao.com/yws/public/resource/7a2a9244a0e6fb6138204da4675bbe06/xmlnote/9F08A98F5E304257B81684C84D7F1A4C/56057" alt="image"></p><h4 id="3-1-2-etc-my-cnf-amp-amp-etc-mysql-my-cnf"><a href="#3-1-2-etc-my-cnf-amp-amp-etc-mysql-my-cnf" class="headerlink" title="3.1.2    /etc/my.cnf &amp;&amp; /etc/mysql/my.cnf"></a>3.1.2    /etc/my.cnf &amp;&amp; /etc/mysql/my.cnf</h4><p>当没有指定–defaults-file时，而且/etc/my.cnf，/etc/mysql/my.cnf，/usr/local/mysql/my.cnf，~/.my.cnf中只存在/etc/my.cnf和/etc/mysql/my.cnf时，很明显MySQL是加载的<font color="FF0000"><b>/etc/mysql/my.cnf</b></font></p><p><img src="https://note.youdao.com/yws/public/resource/7a2a9244a0e6fb6138204da4675bbe06/xmlnote/F98D157B588946A6BE9579B6EA14B677/56069" alt="image"></p><h4 id="3-1-3-etc-my-cnf-amp-amp-etc-mysql-my-cnf-amp-amp-usr-local-mysql-my-cnf"><a href="#3-1-3-etc-my-cnf-amp-amp-etc-mysql-my-cnf-amp-amp-usr-local-mysql-my-cnf" class="headerlink" title="3.1.3    /etc/my.cnf &amp;&amp; /etc/mysql/my.cnf &amp;&amp; /usr/local/mysql/my.cnf"></a>3.1.3    /etc/my.cnf &amp;&amp; /etc/mysql/my.cnf &amp;&amp; /usr/local/mysql/my.cnf</h4><p>当没有指定–defaults-file时，而且/etc/my.cnf，/etc/mysql/my.cnf，/usr/local/mysql/my.cnf，~/.my.cnf中存在/etc/my.cnf和/etc/mysql/my.cnf和/usr/local/mysql/my.cnf时，很明显MySQL是加载的<font color="FF0000"><b>/usr/local/mysql/my.cnf</b></font></p><p><img src="https://note.youdao.com/yws/public/resource/7a2a9244a0e6fb6138204da4675bbe06/xmlnote/A89ED641C57C4F5FA13F56D0FEAB9215/56077" alt="image"></p><h4 id="3-1-4-etc-my-cnf-amp-amp-etc-mysql-my-cnf-amp-amp-usr-local-mysql-my-cnf-amp-amp-my-cnf"><a href="#3-1-4-etc-my-cnf-amp-amp-etc-mysql-my-cnf-amp-amp-usr-local-mysql-my-cnf-amp-amp-my-cnf" class="headerlink" title="3.1.4    /etc/my.cnf &amp;&amp; /etc/mysql/my.cnf &amp;&amp; /usr/local/mysql/my.cnf &amp;&amp; ~/.my.cnf"></a>3.1.4    /etc/my.cnf &amp;&amp; /etc/mysql/my.cnf &amp;&amp; /usr/local/mysql/my.cnf &amp;&amp; ~/.my.cnf</h4><p>当没有指定–defaults-file时，而且/etc/my.cnf，/etc/mysql/my.cnf，/usr/local/mysql/my.cnf，~/.my.cnf全部存在时，很明显MySQL是加载的<font color="FF0000"><b>~/my.cnf</b></font></p><p><img src="https://note.youdao.com/yws/public/resource/7a2a9244a0e6fb6138204da4675bbe06/xmlnote/6C413D12F7754A71A4755FCE6ABC4530/56084" alt="image"></p><h4 id="3-1-5-defaults-file"><a href="#3-1-5-defaults-file" class="headerlink" title="3.1.5    defaults-file"></a>3.1.5    defaults-file</h4><p>当指定<font color="FF0000"><b>–defaults-file为/tmp/my.cnf</b></font>时，而且/etc/my.cnf，/etc/mysql/my.cnf，/usr/local/mysql/my.cnf，~/.my.cnf全部存在时，很明显MySQL是加载的<font color="FF0000"><b>/tmp/my.cnf</b></font></p><p><img src="https://note.youdao.com/yws/public/resource/7a2a9244a0e6fb6138204da4675bbe06/xmlnote/DC1A2943DDE54CA0B0836BABDC1FA112/56095" alt="image"></p><h3 id="3-2-多实例"><a href="#3-2-多实例" class="headerlink" title="3.2    多实例"></a>3.2    多实例</h3><p>多实例的启动通常使用mysqld_multi脚本，此脚本也支持–defaults-file选项。从mysqld_multi的官档上可以看出，mysqld_multi支持[mysqldN]的标签，其中N代表常量数字，此脚本是调用mysqld_safe命令是启动服务，所以支持<font color="FF0000"><b>[mysqld]标签做通用性配置文件</b></font>，适用于多个实例启动时的通用配置，也可以使用<font color="FF0000"><b>[mysqldN]，N代表特定端口做特殊性实例配置。</b></font></p><h4 id="3-2-1-etc-my-cnf-amp-amp-mysqldN"><a href="#3-2-1-etc-my-cnf-amp-amp-mysqldN" class="headerlink" title="3.2.1    /etc/my.cnf &amp;&amp; [mysqldN]"></a>3.2.1    /etc/my.cnf &amp;&amp; [mysqldN]</h4><p>当没有指定–defaults-file时，而且/etc/my.cnf，/etc/mysql/my.cnf，/usr/local/mysql/my.cnf，~/.my.cnf全部存在时，同时在<font color="FF0000"><b>[mysqld]中全部配置</b></font>innodb_lock_wait_timeout，又在/etc/my.cnf加了一个<font color="FF0000"><b>[mysqld3306]</b></font>标签，这时候，<font color="FF0000"><b>MySQL是加载的是/etc/my.cnf的[mysqld3306]标签配置文件</b></font></p><p><img src="https://note.youdao.com/yws/public/resource/7a2a9244a0e6fb6138204da4675bbe06/xmlnote/F9010C7078314524B68ABCCB79075320/56115" alt="image"></p><h4 id="3-2-2-etc-my-cnf-amp-amp-etc-mysql-my-cnf-amp-amp-mysqldN"><a href="#3-2-2-etc-my-cnf-amp-amp-etc-mysql-my-cnf-amp-amp-mysqldN" class="headerlink" title="3.2.2    /etc/my.cnf &amp;&amp; /etc/mysql/my.cnf &amp;&amp; [mysqldN]"></a>3.2.2    /etc/my.cnf &amp;&amp; /etc/mysql/my.cnf &amp;&amp; [mysqldN]</h4><p>当没有指定–defaults-file时，而且/etc/my.cnf，/etc/mysql/my.cnf，/usr/local/mysql/my.cnf，~/.my.cnf全部存在时，同时在<font color="FF0000"><b>[mysqld]中全部配置</b></font>innodb_lock_wait_timeout，又在/etc/my.cnf和/etc/mysql/my.cnf加了一个<font color="FF0000"><b>[mysqld3306]</b></font>标签，这时候，<font color="FF0000"><b>MySQL是加载的是/etc/mysql/my.cnf的[mysqld3306]标签配置文件</b></font></p><p><img src="https://note.youdao.com/yws/public/resource/7a2a9244a0e6fb6138204da4675bbe06/xmlnote/917AB5B37FFD4A8187526979CEEFEF2A/56124" alt="image"></p><h4 id="3-2-3-etc-my-cnf-amp-amp-etc-mysql-my-cnf-amp-amp-usr-local-mysql-my-cnf-amp-amp-mysqldN"><a href="#3-2-3-etc-my-cnf-amp-amp-etc-mysql-my-cnf-amp-amp-usr-local-mysql-my-cnf-amp-amp-mysqldN" class="headerlink" title="3.2.3    /etc/my.cnf &amp;&amp; /etc/mysql/my.cnf  &amp;&amp;/usr/local/mysql/my.cnf &amp;&amp; [mysqldN]"></a>3.2.3    /etc/my.cnf &amp;&amp; /etc/mysql/my.cnf  &amp;&amp;/usr/local/mysql/my.cnf &amp;&amp; [mysqldN]</h4><p>当没有指定–defaults-file时，而且/etc/my.cnf，/etc/mysql/my.cnf，/usr/local/mysql/my.cnf，~/.my.cnf全部存在时，同时在<font color="FF0000"><b>[mysqld]中全部配置</b></font>innodb_lock_wait_timeout，又在/etc/my.cnf和/etc/mysql/my.cnf和/usr/local/mysql/my.cnf加了一个<font color="FF0000"><b>[mysqld3306]</b></font>标签，这时候，<font color="FF0000"><b>MySQL是加载的还是/etc/my.cnf的[mysqld3306]标签配置文件</b></font></p><p><img src="https://note.youdao.com/yws/public/resource/7a2a9244a0e6fb6138204da4675bbe06/xmlnote/C07D630920334BD682CA1F7F04667F43/56133" alt="image"></p><h4 id="3-2-4-etc-my-cnf-amp-amp-etc-mysql-my-cnf-amp-amp-usr-local-mysql-my-cnf-amp-amp-mycf-amp-amp-mysqldN"><a href="#3-2-4-etc-my-cnf-amp-amp-etc-mysql-my-cnf-amp-amp-usr-local-mysql-my-cnf-amp-amp-mycf-amp-amp-mysqldN" class="headerlink" title="3.2.4    /etc/my.cnf &amp;&amp; /etc/mysql/my.cnf  &amp;&amp;/usr/local/mysql/my.cnf  &amp;&amp; ~/.mycf &amp;&amp; [mysqldN]"></a>3.2.4    /etc/my.cnf &amp;&amp; /etc/mysql/my.cnf  &amp;&amp;/usr/local/mysql/my.cnf  &amp;&amp; ~/.mycf &amp;&amp; [mysqldN]</h4><p>当没有指定–defaults-file时，而且/etc/my.cnf，/etc/mysql/my.cnf，/usr/local/mysql/my.cnf，~/.my.cnf全部存在时，同时在<font color="FF0000"><b>[mysqld]中全部配置</b></font>innodb_lock_wait_timeout，又在全部配置了<font color="FF0000"><b>[mysqld3306]</b></font>标签，这时候，<font color="FF0000"><b>MySQL是加载的是~/my.cnf的[mysqld3306]标签配置文件</b></font></p><p><img src="https://note.youdao.com/yws/public/resource/7a2a9244a0e6fb6138204da4675bbe06/xmlnote/1617DEDF15AA4734A86C7037814A0C69/56142" alt="image"></p><h4 id="3-2-5-defaults-file-amp-amp-mysqldN"><a href="#3-2-5-defaults-file-amp-amp-mysqldN" class="headerlink" title="3.2.5    defaults-file &amp;&amp; [mysqldN]"></a>3.2.5    defaults-file &amp;&amp; [mysqldN]</h4><p>当<font color="FF0000"><b>指定–defaults-file为/tmp/my.cnf</b></font>时，而且/etc/my.cnf，/etc/mysql/my.cnf，/usr/local/mysql/my.cnf，~/.my.cnf全部存在时，同时在了<font color="FF0000"><b>[mysqld]中全部配置</b></font>innodb_lock_wait_timeout，又在全部配置了了<font color="FF0000"><b>[mysqld3306]</b></font>标签，这时候，了<font color="FF0000"><b>MySQL是加载的是/tmp/my.cnf的[mysqld3306]标签配置文件</b></font></p><p><img src="https://note.youdao.com/yws/public/resource/7a2a9244a0e6fb6138204da4675bbe06/xmlnote/833693EF85DB4F809E03E3F14A11373C/56152" alt="image"></p><h4 id="3-2-6-defaults-file"><a href="#3-2-6-defaults-file" class="headerlink" title="3.2.6    defaults-file"></a>3.2.6    defaults-file</h4><p>当<font color="FF0000"><b>指定–defaults-file为/tmp/my.cnf</b></font>时，而且/etc/my.cnf，/etc/mysql/my.cnf，/usr/local/mysql/my.cnf，~/.my.cnf全部存在时，同时在<font color="FF0000"><b>[mysqld]中全部配置</b></font>innodb_lock_wait_timeout，全部<font color="FF0000"><b>未配置</b></font>了[mysqld3306]标签，这时候，<font color="FF0000"><b>MySQL是加载的是~/my.cnf的配置文件而不是加载的/tmp/my.cnf的配置文件，说明mysqld_multi不加载除默认搜索的配置文件外的其他[mysqld]标签</b></font></p><p><img src="https://note.youdao.com/yws/public/resource/7a2a9244a0e6fb6138204da4675bbe06/xmlnote/390A51668F654EEBACE26FD87CF50C3F/56164" alt="image"></p><h2 id="4-启动方式"><a href="#4-启动方式" class="headerlink" title="4    启动方式"></a>4    启动方式</h2><p>MySQL的启动包括多种，包括以下几种：</p><ul><li>/usr/local/mysql/bin/mysqld –defaults-file=/etc/my.cnf –basedir=/usr/local/mysql –datadir=/opt/mysql/data –user=mysql</li><li>/usr/local/mysql/bin/mysqld_safe –defaults-file=/etc/my.cnf –basedir=/usr/local/mysql –datadir=/opt/mysql/data –user=mysql</li><li>/etc/init.d/mysqld start &amp;&amp; service mysqld start</li><li>mysqld_multi start<h3 id="4-1-service-mysqld-start"><a href="#4-1-service-mysqld-start" class="headerlink" title="4.1    service mysqld start"></a>4.1    service mysqld start</h3>service mysqld start的启动有一个要注意的地方，它不会加载~/.my.cnf，实验如下，很明显，部<font color="FF0000"><b>service mysqld start启动方式不加载~/.my.cnf的参数</b></font></li></ul><p><img src="https://note.youdao.com/yws/public/resource/7a2a9244a0e6fb6138204da4675bbe06/xmlnote/A284976227264421919972DF05A06BAC/56183" alt="image"></p><h4 id="4-1-1-分析"><a href="#4-1-1-分析" class="headerlink" title="4.1.1 分析"></a>4.1.1 分析</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">由于linux的service启动服务的方式是调用的/sbin/service脚本来进行管理的，并且/sbin/service脚本是shell编写的，可以通过debug的模式来查看具体执行过程</span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/7a2a9244a0e6fb6138204da4675bbe06/xmlnote/835F9C7BF570488EA0D2A1099F009BF4/56191" alt="image"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">通过上面的执行过程可以了解到，service mysqld start启动mysql的方式，实际最终调用的命令为：</span><br><span class="line">env -i PATH=/sbin:/usr/sbin:/bin:/usr/bin TERM=linux SYSTEMCTL_IGNORE_DEPENDENCIES= SYSTEMCTL_SKIP_REDIRECT= /etc/init.d/mysqld start</span><br><span class="line">此命令没有包含/home/mysql的环境变量，如果修改为以下命令，则可以加载~/.my.cnf</span><br><span class="line">命令为：</span><br><span class="line">env -i PATH=/sbin:/usr/sbin:/bin:/usr/bin HOME=/home/mysql TERM=linux SYSTEMCTL_IGNORE_DEPENDENCIES= SYSTEMCTL_SKIP_REDIRECT= /etc/init.d/mysqld start</span><br></pre></td></tr></table></figure></p><h4 id="4-1-2-解决方案"><a href="#4-1-2-解决方案" class="headerlink" title="4.1.2 解决方案"></a>4.1.2 解决方案</h4><p>从脚本/sbin/service的最下面部分可以看出，具体的启动命令，如果想修改为让service mysqld start的启动方式也能搜索~/.my.cnf的参数，可以修改具体的脚本，添加了一个if else判断条件，如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">将脚本/sbin/service的第81行的原始命令：</span><br><span class="line">env -i PATH=&quot;$PATH&quot; TERM=&quot;$TERM&quot; SYSTEMCTL_IGNORE_DEPENDENCIES=$&#123;SYSTEMCTL_IGNORE_DEPENDENCIES&#125; SYSTEMCTL_SKIP_REDIRECT=$&#123;SYSTEMCTL_SKIP_REDIRECT&#125; &quot;$&#123;SERVICEDIR&#125;/$&#123;SERVICE&#125;&quot; $&#123;ACTION&#125; $&#123;OPTIONS&#125;</span><br><span class="line">修改为</span><br><span class="line">if [ &quot;$&#123;SERVICE&#125;&quot; = &quot;mysqld&quot; ]; then</span><br><span class="line">      env -i PATH=&quot;$PATH&quot; HOME=/home/mysql TERM=&quot;$TERM&quot; SYSTEMCTL_IGNORE_DEPENDENCIES=$&#123;SYSTEMCTL_IGNORE_DEPENDENCIES&#125; SYSTEMCTL_SKIP_REDIRECT=$&#123;SYSTEMCTL_SKIP_REDIREC</span><br><span class="line">T&#125; &quot;$&#123;SERVICEDIR&#125;/$&#123;SERVICE&#125;&quot; $&#123;ACTION&#125; $&#123;OPTIONS&#125;</span><br><span class="line">   else</span><br><span class="line">      env -i PATH=&quot;$PATH&quot; TERM=&quot;$TERM&quot; SYSTEMCTL_IGNORE_DEPENDENCIES=$&#123;SYSTEMCTL_IGNORE_DEPENDENCIES&#125; SYSTEMCTL_SKIP_REDIRECT=$&#123;SYSTEMCTL_SKIP_REDIRECT&#125; &quot;$&#123;SERVICEDIR&#125;/$&#123;SERVICE&#125;&quot; $&#123;ACTION&#125; $&#123;OPTIONS&#125;</span><br><span class="line">   fi</span><br></pre></td></tr></table></figure></p><p>如下：</p><p><img src="https://note.youdao.com/yws/public/resource/7a2a9244a0e6fb6138204da4675bbe06/xmlnote/6EF18BE4F04B4EAC860937772527AFBF/56208" alt="image"></p><p><img src="https://note.youdao.com/yws/public/resource/7a2a9244a0e6fb6138204da4675bbe06/xmlnote/55AABFB711964631877B3132DFB71DBD/56212" alt="image"></p><p>修改后的脚本启动一下测试，查看已经满足需求</p><p><img src="https://note.youdao.com/yws/public/resource/7a2a9244a0e6fb6138204da4675bbe06/xmlnote/DDB2AF9783C44EB290A3F38CEB996C1E/56214" alt="image"></p><h3 id="4-3-mysqld-multi-start"><a href="#4-3-mysqld-multi-start" class="headerlink" title="4.3    mysqld_multi start"></a>4.3    mysqld_multi start</h3><p>当mysqld_multi方式指定–defaults-file的参数文件时，不加载除默认搜索顺序以外的[mysqld]标签，也可以做下debug，mysqld_multi是perl脚本，可能通过perl -d script的方式进行调试，这里不再展示。</p><h2 id="5-结论"><a href="#5-结论" class="headerlink" title="5    结论"></a>5    结论</h2><p>通过以上的的测试，得出以下结论<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.默认情况前三种启动方式下，[mysqld]标签以按照/etc/my.cnf，/etc/mysql/my.cnf，/usr/local/mysql/my.cnf，~/.my.cnf，--defaults-file搜索顺序加载</span><br><span class="line">2.mysqld_mutli启动方式，[mysqldN]标签也是按照/etc/my.cnf，/etc/mysql/my.cnf，/usr/local/mysql/my.cnf，~/.my.cnf，--defaults-file搜索顺序加载。但是，[mysqld]标签只按照/etc/my.cnf，/etc/mysql/my.cnf，/usr/local/mysql/my.cnf，~/.my.cnf搜索顺序加载，不加载--defaults-file的配置</span><br><span class="line">3.service mysqld start启动方式，默认不加载~/.my.cnf文件，需要修改脚本才能让其支持搜索</span><br><span class="line">4.当找不到/etc/my.cnf，/etc/mysql/my.cnf，/usr/local/mysql/my.cnf，~/.my.cnf，--defaults-file的配置时，默认编译的mysql，参数是全部其默认值，数据目录保存在BASEDIR下的data目录。比如，BASEDIR为/usr/local/mysql，则DATADIR为/usr/local/mysql/data，上面没有实验这一项</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-引言&quot;&gt;&lt;a href=&quot;#1-引言&quot; class=&quot;headerlink&quot; title=&quot;1    引言&quot;&gt;&lt;/a&gt;1    引言&lt;/h2&gt;&lt;p&gt;MySQL数据库支持从配置文件中读取启动选项，不用每次启动时在命令行输入，方便管理。很多选项都是以纯文本的形式存
      
    
    </summary>
    
      <category term="MySQL" scheme="https://dwj999.github.io/categories/MySQL/"/>
    
    
      <category term="MySQL" scheme="https://dwj999.github.io/tags/MySQL/"/>
    
  </entry>
  
</feed>
